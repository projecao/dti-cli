#!/usr/bin/env node

var program = require('commander')
var exists = require('fs').existsSync
var path = require('path')
var ora = require('ora')
var home = require('user-home')
var tildify = require('tildify')
var chalk = require('chalk')
var inquirer = require('inquirer')
var rm = require('rimraf').sync
var logger = require('../lib/logger')
var generate = require('vue-cli/lib/generate')
var checkVersion = require('../lib/check-version')
var warnings = require('vue-cli/lib/warnings')
var localPath = require('vue-cli/lib/local-path')
var packageConfig = require('../package.json')

var isLocalPath = localPath.isLocalPath
var getTemplatePath = localPath.getTemplatePath

/**
 * Usage.
 */

program
  .usage('<template-name> [project-name]')
  .option('-c, --clone', 'use git clone')
  .option('--offline', 'use cached template')

/**
 * Help.
 */

program.on('--help', function () {
  console.log('  Examples:')
  console.log()
  console.log(chalk.gray('    # create a new project with an official template'))
  console.log('    $ dti init webpack my-project')
  console.log()
  console.log(chalk.gray('    # create a new project straight from a github template'))
  console.log('    $ dti init username/repo my-project')
  console.log()
})

/**
 * Help.
 */

function help () {
  program.parse(process.argv)
  if (program.args.length < 1) return program.help()
}
help()

/**
 * Settings.
 */

var template = program.args[0]
var hasSlash = template.indexOf('/') > -1
var rawName = program.args[1]
var inPlace = !rawName || rawName === '.'
var name = inPlace ? path.relative('../', process.cwd()) : rawName
var to = path.resolve(rawName || '.')
var clone = program.clone || false

var tmp = path.join(
  home, '.dti-templates', 
  template.replace(/\//g, '-').replace('github:', '')
)

if (program.offline) {
  console.log(`> Use cached template at ${chalk.yellow(tildify(tmp))}`)
  template = tmp
}

/**
 * Padding.
 */

console.log()
process.on('exit', function () {
  console.log()
})

if (exists(to)) {
  inquirer.prompt([{
    type: 'confirm',
    message: inPlace
      ? 'Generate project in current directory?'
      : 'Target directory exists. Continue?',
    name: 'ok'
  }], function (answers) {
    if (answers.ok) {
      run()
    }
  })
} else {
  run()
}

/**
 * Check, download and generate the project.
 */

function run () {

  checkVersion(function () {
    
    var spinner = ora('downloading template from DTI')
    spinner.start()

    // use official templates
    var officialTemplate = 'file:\\gates\\DTI\\Desenvolvimento\\' + template
    var templatePath = getTemplatePath(officialTemplate)

    console.log( templatePath )
    if (exists(templatePath)) {
      generate(name, templatePath, to, function (err) {
        spinner.stop()
        if (err) logger.fatal(err)
        console.log()
        logger.success('Generated "%s".', name)
      })
    } else {
      logger.fatal('Local template "%s" not found.', template)
    }
    
  })
  
}
